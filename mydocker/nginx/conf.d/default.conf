error_log off;
access_log off;

map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

map $sent_http_content_type $expires {
    "text/html" epoch;
    "text/html; charset=utf-8" epoch;
    default off;
}

# NodeJS server
upstream node-http {
    server node:3000;
}

# PHP-FPM 7.4 Swoole server
upstream php-http {
    server php:1215;
}

# PHP-FPM 5.6 legacy server
upstream php-legacy-http {
    server php-legacy:9000;
}

# ----------------------------------------------------------------
# New bsibroker.co.th
server {
    listen 80;
    server_name staging.bsibroker.co.th;

    # Redirect HTTP to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

server {
    # Listen HTTPS
    listen 443 http2 ssl;
    server_name staging.bsibroker.co.th;

    # SSL config
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    ssl_certificate /etc/letsencrypt/live/bsibroker.co.th/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/bsibroker.co.th/privkey.pem;

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    client_max_body_size 108M;

    gzip on;
    gzip_disable "MSIE [1-6]\.";
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied any;
    gzip_comp_level 9;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript image/png image/gif image/jpeg image/webp video/mp4 font/ttf;
    # tells the server to use on-the-fly gzip compression.

    location / {
        proxy_pass http://node-http;
        proxy_set_header Host $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }
}

# ----------------------------------------------------------------
# Laravel API Server - api.bsibroker.co.th
server {
    # Listen HTTP
    listen 80;
    server_name api.bsibroker.co.th;

    # Redirect HTTP to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

server {
    # Listen HTTPS
    listen 443 http2 ssl;
    server_name api.bsibroker.co.th;

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    client_max_body_size 108M;

    gzip on;
    gzip_disable "MSIE [1-6]\.";
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied any;
    gzip_comp_level 9;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript image/png image/gif image/jpeg image/webp video/mp4 font/ttf;
    # tells the server to use on-the-fly gzip compression.

    # SSL config
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    ssl_certificate /etc/letsencrypt/live/bsibroker.co.th/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/bsibroker.co.th/privkey.pem;
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    # Proxy Config
    root /app/bsibroker-api/public;
    index index.php;

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    ## Swoole configuration
    location = /index.php {
        # Ensure that there is no such file named "not_exists"
        # in your "public" directory.
        try_files /not_exists @swoole;
    }

    location / {
        try_files $uri $uri/ @swoole;
    }

    location @swoole {
        set $suffix "";

        if ($uri = /index.php) {
            set $suffix ?$query_string;
        }

        proxy_http_version 1.1;
        proxy_set_header Host $http_host;
        proxy_set_header Scheme $scheme;
        proxy_set_header SERVER_PORT $server_port;
        proxy_set_header REMOTE_ADDR $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # IF https
        # proxy_set_header HTTPS "on";

        proxy_pass http://php-http$suffix;
    }

    # # PHP-FPM
    # location / {
    #     # This is cool because no php is touched for static content.
    #     # include the "?$args" part so non-default permalinks doesn't break when using query string
    #     try_files $uri $uri/ /index.php?$args;
    # }
    # location ~ \.php$ {
    #     try_files $uri =404;
    #     fastcgi_split_path_info ^(.+\.php)(/.+)$;
    #     fastcgi_index index.php;
    #     fastcgi_pass php-http;
    #     include fastcgi_params;
    #     fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
    #     fastcgi_param SCRIPT_NAME $fastcgi_script_name;
    # }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico|ttf|webp)$ {
        expires 365d;
    }
}
# ----------------------------------------------------------------
# Legacy Website
server {
    listen 80;
    server_name bsibroker.co.th www.bsibroker.co.th;

    # Redirect HTTP to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# Legacy HTTPS
server {
    # Listen HTTPS
    listen 443 http2 ssl;
    server_name bsibroker.co.th www.bsibroker.co.th;

    # Digicert SSL config
    ssl_certificate /var/www/digicert/bundle.crt;
    ssl_certificate_key /var/www/digicert/www_bsibroker_co_th.key;

    root /app/bsibroker-legacy;
    index index.php index.html;

    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";
    add_header X-Content-Type-Options "nosniff";

    client_max_body_size 108M;

    gzip on;
    gzip_disable "MSIE [1-6]\.";
    gzip_vary on;
    gzip_min_length 10240;
    gzip_proxied any;
    gzip_comp_level 9;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript image/png image/gif image/jpeg image/webp video/mp4 font/ttf;
    # tells the server to use on-the-fly gzip compression.

    location = /robots.txt {
        allow all;
        log_not_found off;
        access_log off;
    }

    location / {
        # This is cool because no php is touched for static content.
        # include the "?$args" part so non-default permalinks doesn't break when using query string
        try_files $uri $uri/ /index.php?$args;
    }

    location ~ \.php$ {
        try_files $uri =404;
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_index index.php;
        fastcgi_pass php-legacy-http;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param SCRIPT_NAME $fastcgi_script_name;
    }

    location ~* \.(js|css|png|jpg|jpeg|gif|ico|ttf|webp)$ {
        expires 365d;
    }
}
